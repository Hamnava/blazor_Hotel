@page "/registration"
@inject IAuthenticationService authenticationService
@inject NavigationManager navigatioinManager


<EditForm Model="requestForUser" OnValidSubmit="RegisterUser" class="pt-4">
    <DataAnnotationsValidator />

    <div class="py-4">
        <div class=" row form-group ">
            <div class="col-6 offset-3 ">
                <div class="card border" style="background-color:#08708a">
                    <div class="card-body px-lg-5 pt-4">
                        <h3 class="col-12 text-white text-center py-2">
                            <strong>Sign Up</strong>
                        </h3>
                        @if (ShowRegistrationErrors)
                        {
                            <div>
                                @foreach (var error in Errors)
                                {
                                   <p style="color:darkred; font-weight:bold" class="text-center">@error</p>
                                }
                            </div>
                        }


                        <hr style="background-color:aliceblue" />
                        <div class="py-2">
                            <InputText @bind-Value="requestForUser.Name" class="form-control" placeholder="Name..." />
                            <ValidationMessage For="(()=> requestForUser.Name)"/>
                        </div>
                        <div class="py-2">
                            <InputText @bind-Value="requestForUser.Email" class="form-control" placeholder="Email..." />
                            <ValidationMessage For="(()=> requestForUser.Email)"/>
                        </div>
                        <div class="py-2 input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> +93</span>
                            </div>
                            <InputText @bind-Value="requestForUser.PhoneNo" class="form-control" placeholder="Phone number..." />
                            <ValidationMessage For="(()=> requestForUser.PhoneNo)"/>
                        </div>
                        <div class="form-row py-2">
                            <div class="col">
                                <InputText @bind-Value="requestForUser.Password" type="password" id="password" placeholder="Password..." class="form-control" />
                                <ValidationMessage For="(()=> requestForUser.Password)"/>
                            </div>
                            <div class="col mt-3">
                                <InputText @bind-Value="requestForUser.ConfirmPassword" type="password" id="confirm" class="form-control" placeholder="Confirm Password..." />
                                <ValidationMessage For="(()=> requestForUser.ConfirmPassword)"/>
                            </div>

                        </div>
                        <hr style="background-color:aliceblue" />
                        <div class="py-2">
                            @if (IsProccessing)
                           {
                                <button type="submit" class="btn btn-success btn-block" disabled><i class="fas fa-sign-in-alt"></i> please wait...</button>
                            }
                            else
                            {
                            <button type="submit" class="btn btn-success btn-block"><i class="fas fa-sign-in-alt"></i> Register</button>
                            }
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>



</EditForm>



@code {
    private UserRequestDTO requestForUser = new UserRequestDTO();
    public bool IsProccessing { get; set; } = false;
    public bool ShowRegistrationErrors { get; set; }
    public IEnumerable<string> Errors { get; set; }

    private async Task RegisterUser()
    {
        IsProccessing = true;
        ShowRegistrationErrors = false;
        var result = await authenticationService.RegisterUser(requestForUser);
        if (result.IsRegistrationSuccessful)
        {
            IsProccessing = false;
            navigatioinManager.NavigateTo("/login");
        }
        else
        {
            IsProccessing = false;
            ShowRegistrationErrors = true;
            Errors = result.Errors;
        }

    }

}
